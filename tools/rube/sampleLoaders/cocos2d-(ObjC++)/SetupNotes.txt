Video walkthrough here: http://youtu.be/UT-uGUcnMW0

For both v1 and v2
==================
1. Create a new project using the Box2D version of the Cocos2d template.
2. Remove the Box2D folder from under 'libs' in the Xcode project, and delete the Box2D folder from 
   the 'libs' folder in Finder.
3. Download the most recent Box2D source code, preferably by using Subversion. You can do this with 
   the following command in a terminal:
        svn checkout http://box2d.googlecode.com/svn/trunk/ box2d-read-only
   If you do not have the 'svn' command line tool available you can install it via Xcode, in the 
   preferences dialog under the Downloads subsection, in the Components tab, install 'Command line tools'.
4. From the Box2D source you downloaded, find the main folder of the physics library itself. This is 
   the folder which contains the file Box2D.h - copy that folder into the 'libs' folder, then drag 
   it into the Xcode project.
6. Copy everything in the RUBE sample loader folder into the main folder of your project. This should
   cause Finder to ask if you want to replace or merge the Resources folder. Choose merge.
   Add these files to the Xcode project. The easiest way is to right-click the project inside Xcode and
   then choose "Add files to...". In the dialog that appears, the files that are not yet added to 
   the project will be in black text, with already added files in gray. Choose all new files, and 
   also the 'rubestuff' folder.
7. From the Resources folder, drag all the .json files and the 'sounds' folder into the Xcode project.
8. From the Resources folder, drag the 'images' folder into the Xcode project, and in the dialog that
   appears, select "Create folder references for any added folders".
9. Remove the HelloWorldLayer files from the Xcode project.


For v1
======
10. In AppDelegate.mm change the two occurrences of HelloWorldLayer to ExamplesMenuLayer.
11. In GLES-Render.h change the b2DebugDraw to b2Draw.
12. In GLES-Render.mm in the DrawTransform method, change these locations:
        xf.position -> xf.p
        xf.R.col1 -> xf.q.GetXAxis()
        xf.R.col2 -> xf.q.GetYAxis()
13. Optionally, add this line at the end of applicationDidFinishLaunching in AppDelegate.mm to allow
    for pinch zooming:
        [glView setMultipleTouchEnabled:YES];
14. Optionally, change this line in AppDelegate.mm to allow orientation changing:
        (Before) [window addSubview: viewController.view];
        (After)  [window setRootViewController:viewController];
	

For v2
======
10. In AppDelegate.mm change the two occurrences of IntroLayer to ExamplesMenuLayer.
11. Optionally, in AppDelegate.mm make the shouldAutorotateToInterfaceOrientation method return YES
     to allow all device orientations.

